service: poke-backend

provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-1
  environment:
    USERS_TABLE: poke-users
    POKES_TABLE: poke-pokes
    CONVERSATIONS_TABLE: poke-conversations
    MESSAGES_TABLE: poke-messages
    JWT_SECRET: your_jwt_secret_here

functions:
  login:
    handler: src/handlers.login
    events:
      - http:
          path: login
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
  verifyOtp:
    handler: src/handlers.verifyOtp
    events:
      - http:
          path: verify-otp
          method: post
          cors: true
  updateProfile:
    handler: src/handlers.updateProfile
    events:
      - http:
          path: update-profile
          method: post
          cors: true
  updateLocation:
    handler: src/handlers.updateLocation
    events:
      - http:
          path: update-location
          method: post
          cors: true
  getNearbyUsers:
    handler: src/handlers.getNearbyUsers
    events:
      - http:
          path: users/nearby
          method: get
          cors: true
  sendPoke:
    handler: src/handlers.sendPoke
    events:
      - http:
          path: poke
          method: post
          cors: true
  getIncomingPokes:
    handler: src/handlers.getIncomingPokes
    events:
      - http:
          path: pokes/incoming
          method: get
          cors: true
  sendMessage:
    handler: src/handlers.sendMessage
    events:
      - http:
          path: message
          method: post
          cors: true
  getMessages:
    handler: src/handlers.getMessages
    events:
      - http:
          path: conversation/{conversationId}/messages
          method: get
          cors: true

resources:
  Resources:
    PokeFrontendBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: poke-frontend-bucket # Replace with a globally unique name or remove to let CloudFormation generate one
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
    PokeFrontendBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref PokeFrontendBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action: "s3:GetObject"
              Resource: !Sub "${PokeFrontendBucket.Arn}/*"
  Outputs:
    PokeFrontendBucketName:
      Description: "The name of the frontend S3 bucket"
      Value: !Ref PokeFrontendBucket
